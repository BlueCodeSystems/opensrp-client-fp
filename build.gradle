// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        maven {
            url 'https://maven.fabric.io/public'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
        // classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
        classpath 'com.google.gms:google-services:4.3.3'
        // Add the Crashlytics Gradle plugin.
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.1.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

configure(allprojects) { project ->

    version = VERSION_NAME
    group = GROUP
    buildscript {
        repositories {
            google()
            jcenter()
            mavenCentral()
            maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
            mavenLocal()
        }
    }
}



allprojects {
    repositories {
        maven { url 'https://maven.google.com' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://acra.googlecode.com/svn/repository/releases" }
        maven { url "https://repo.maven.apache.org/maven2" }
        maven { url "https://cloudant.github.io/cloudant-sync-eap/repository" }
        maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
        google()
        jcenter()
    }
}

project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    group = 'org.smartregister'

    ext.androidToolsBuildGradle = '7.4.2'
    ext.androidBuildToolsVersion = '33.0.0'
    ext.androidMinSdkVersion = 28
    ext.androidCompileSdkVersion = 34
    ext.androidTargetSdkVersion = 34
    ext.androidAnnotationsVersion = '3.0.1'
    ext.androidAnnotationsAPIVersion = '3.0.1'
    ext.jacocoVersion = "0.8.5"

}

task clean(type: Delete) {
    delete rootProject.buildDir
}

jacoco {
    toolVersion = "0.8.8"
}

task jacocoFullReport(type: JacocoReport) {
    dependsOn ':opensrp-fp:testDebugUnitTest'
    
    reports {
        xml.enabled = true
        html.enabled = true
    }
    
    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${project(':opensrp-fp').buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "${project(':opensrp-fp').projectDir}/src/main/java"
    
    sourceDirectories.setFrom files([mainSrc])
    classDirectories.setFrom files([debugTree])
    executionData.setFrom fileTree(dir: "${project(':opensrp-fp').buildDir}", includes: ['jacoco/testDebugUnitTest.exec'])
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoFullReport/jacocoFullReport.xml"
    sourceDirs += ["opensrp-fp/src/main/java/", "reference-app/src/main/java"]
}
// apply plugin: 'io.codearte.nexus-staging'

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}
